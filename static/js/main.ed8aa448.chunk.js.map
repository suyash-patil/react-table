{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","table","minWidth","maxWidth","App","updateName","idx","e","newRows","rows","name","target","value","setRows","updateAge","age","useState","status","editable","classes","className","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","map","row","ClickAwayListener","onClickAway","handleClickAway","onClick","changeEditableStatus","Input","style","fontSize","type","onChange","Switch","checked","updateStatus","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sUAKMA,EAAYC,YAAW,CAC3BC,MAAO,CACLC,SAAU,IACVC,SAAU,OAqKCC,MAjKf,WAEE,IAYMC,EAAa,SAACC,GAAD,OAAS,SAAAC,GAC1B,IAAIC,EAAO,YAAOC,GAClBD,EAAQF,GAAKI,KAAOH,EAAEI,OAAOC,MAC7BC,EAAQL,KAQJM,EAAY,SAACR,GAAD,OAAS,SAAAC,GACzB,IAAIC,EAAO,YAAOC,GAClBD,EAAQF,GAAKS,IAAMR,EAAEI,OAAOC,MAC5BC,EAAQL,KAiEV,EAAuBQ,mBA9DV,CACX,CACEN,KAAM,OACNO,QAAQ,EACRF,IAAK,GACLG,UAAU,GAEZ,CACER,KAAM,MACNO,QAAQ,EACRF,IAAK,GACLG,UAAU,GAEZ,CACER,KAAM,QACNO,QAAQ,EACRF,IAAK,GACLG,UAAU,GAEZ,CACER,KAAM,QACNO,QAAQ,EACRF,IAAK,GACLG,UAAU,GAEZ,CACER,KAAM,OACNO,QAAQ,EACRF,IAAK,GACLG,UAAU,GAEZ,CACER,KAAM,MACNO,QAAQ,EACRF,IAAK,GACLG,UAAU,GAEZ,CACER,KAAM,OACNO,QAAQ,EACRF,IAAK,GACLG,UAAU,GAEZ,CACER,KAAM,UACNO,QAAQ,EACRF,IAAK,GACLG,UAAU,GAEZ,CACER,KAAM,MACNO,QAAQ,EACRF,IAAK,GACLG,UAAU,GAEZ,CACER,KAAM,OACNO,QAAQ,EACRF,IAAK,GACLG,UAAU,KAGd,mBAAOT,EAAP,KAAYI,EAAZ,KACMM,EAAUpB,IAGhB,OACE,qBAAKqB,UAAU,MAAf,SACGX,GAAQ,cAACY,EAAA,EAAD,CAAgBD,UAAWD,EAAQlB,MAAOqB,UAAWC,IAArD,SACP,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,mBAGA,cAACA,EAAA,EAAD,qBAGA,cAACA,EAAA,EAAD,uBAKJ,cAACC,EAAA,EAAD,UACGnB,EAAKoB,KAAI,SAACC,EAAKxB,GAAN,OACR,eAACoB,EAAA,EAAD,WACA,cAACK,EAAA,EAAD,CAAmBC,YAAa,kBA7GpB,SAAC1B,GACvB,IAAIE,EAAO,YAAOC,GAClBD,EAAQF,GAAKY,UAAW,EACxBL,EAAQL,GA0GwCyB,CAAgB3B,IAAtD,SACE,cAACqB,EAAA,EAAD,CAAWO,QAAS,kBApHL,SAAC5B,GAC5B,IAAIE,EAAO,YAAOC,GAClBD,EAAQF,GAAKY,UAAW,EACxBL,EAAQL,GAiH8B2B,CAAqB7B,IAA/C,SACGwB,EAAIZ,SACD,cAACkB,EAAA,EAAD,CAAOC,MAAO,CAAEC,SAAU,YAAaC,KAAK,OAAOC,SAAUnC,EAAWC,GAAMM,MAAOkB,EAAIpB,OAAWoB,EAAIpB,SAK9G,cAACiB,EAAA,EAAD,UACE,cAACc,EAAA,EAAD,CAAQC,QAASZ,EAAIb,OAAQuB,SAAU,kBA3GlC,SAAClC,GACpB,IAAIE,EAAO,YAAOC,IACU,IAAxBD,EAAQF,GAAKW,OAAiBT,EAAQF,GAAKW,QAAS,EACnDT,EAAQF,GAAKW,QAAS,EAC3BJ,EAAQL,GAuGmDmC,CAAarC,QAE5D,cAACqB,EAAA,EAAD,UACE,yBAAQf,MAAOkB,EAAIf,IAAKyB,SAAU1B,EAAUR,GAA5C,UACE,wBAAQM,MAAM,KAAd,gBAGA,wBAAQA,MAAM,KAAd,gBAGA,wBAAQA,MAAM,KAAd,gBAGA,wBAAQA,MAAM,KAAd,gBAGA,wBAAQA,MAAM,KAAd,gBAGA,wBAAQA,MAAM,KAAd,uBA7BSN,gBCpHdsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.ed8aa448.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState} from 'react';\nimport {ClickAwayListener, Input, makeStyles, Switch, Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n    maxWidth: 650\n  },\n});\n\nfunction App() {\n\n  const changeEditableStatus = (idx) => {\n    let newRows = [...rows];\n    newRows[idx].editable = true;\n    setRows(newRows);\n  }\n\n  const handleClickAway = (idx) => {\n    let newRows = [...rows];\n    newRows[idx].editable = false;\n    setRows(newRows);\n  }\n\n  const updateName = (idx) => e => {\n    let newRows = [...rows];\n    newRows[idx].name = e.target.value;\n    setRows(newRows);\n  }\n  const updateStatus = (idx) => {\n    let newRows = [...rows];\n    if (newRows[idx].status === true) newRows[idx].status = false;\n    else newRows[idx].status = true;\n    setRows(newRows);\n  }\n  const updateAge = (idx) => e => {\n    let newRows = [...rows];\n    newRows[idx].age = e.target.value;\n    setRows(newRows);\n  }\n\n  const data = [\n    {\n      name: 'John',\n      status: true,\n      age: 10,\n      editable: false\n    },\n    {\n      name: 'Doe',\n      status: true,\n      age: 10,\n      editable: false\n    },\n    {\n      name: 'James',\n      status: true,\n      age: 10,\n      editable: false\n    },\n    {\n      name: 'Clara',\n      status: true,\n      age: 10,\n      editable: false\n    },\n    {\n      name: 'Arya',\n      status: true,\n      age: 10,\n      editable: false\n    },\n    {\n      name: 'Ash',\n      status: true,\n      age: 10,\n      editable: false\n    },\n    {\n      name: 'Gary',\n      status: true,\n      age: 10,\n      editable: false\n    },\n    {\n      name: 'Anatoly',\n      status: true,\n      age: 10,\n      editable: false\n    },\n    {\n      name: 'Jon',\n      status: true,\n      age: 10,\n      editable: false\n    },\n    {\n      name: 'Snow',\n      status: true,\n      age: 10,\n      editable: false\n    }]\n\n  const [rows,setRows] = useState(data);\n  const classes = useStyles();\n\n\n  return (\n    <div className=\"App\">\n      {rows && <TableContainer className={classes.table} component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>\n                Name\n              </TableCell>\n              <TableCell>\n                Status\n              </TableCell>\n              <TableCell>\n                Age\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row, idx) => (\n              <TableRow key={idx}>\n              <ClickAwayListener onClickAway={() => handleClickAway(idx)}>\n                <TableCell onClick={() => changeEditableStatus(idx)}>\n                  {row.editable ?\n                      <Input style={{ fontSize: \"0.875rem\"}} type=\"text\" onChange={updateName(idx)} value={row.name} /> : row.name\n                  }\n\n                </TableCell>\n                </ClickAwayListener>\n                <TableCell>\n                  <Switch checked={row.status} onChange={() => updateStatus(idx)} />\n                </TableCell>\n                <TableCell>\n                  <select value={row.age} onChange={updateAge(idx)}>\n                    <option value=\"10\">\n                      10\n                    </option>\n                    <option value=\"11\">\n                      11\n                    </option>\n                    <option value=\"12\">\n                      12\n                    </option>\n                    <option value=\"13\">\n                      13\n                    </option>\n                    <option value=\"14\">\n                      14\n                    </option>\n                    <option value=\"15\">\n                      15\n                    </option>\n                  </select>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>}\n    </div>\n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}